# If having any issues with the docker network:
# https://github.com/docker/for-win/issues/2194

# how to run a container after the ones from which it depends on:
# https://medium.com/better-programming/a-look-at-docker-composes-bootup-sequence-1f597049cc65

services:

  # HTTP request/response logger
  interceptor:
   container_name: interceptor
   build: 
    context: .
    dockerfile: docker/interceptor/Dockerfile
   
   image: interceptor:latest
   # -bp must be equal to port exposed by the benchmark.
   entrypoint: ["python3", "Interceptor.py", "--mode", "container", "-bp", "80"]

   volumes:
     # uncomment to enable this container to contact the host system docker engine API.
     # https://stackoverflow.com/questions/40844197/what-is-the-docker-security-risk-of-var-run-docker-sock
     #- "/var/run/docker.sock:/var/run/docker.sock"

     # uncomment to pass docker-compose.yml to this container.
     #- "./docker-compose.yml:/WAPT-Dataset-Collector/code/docker-compose.yml"

     - type: bind
       source: ./out
       target: /WAPT-Dataset-Collector/out
   ports:
    - "8888:8888"
   networks:
     - penetration_net
   # this enforces docker to build this container after that the others on which it depends.
   depends_on:
    - benchmark

  # Benchmark

  # Uncomment following lines to use Wavsep as benchmark container.

  #benchmark:
  #  container_name: benchmark
  #  build:
  #    context: .
  #    dockerfile: docker/wavsep/Dockerfile
  #
  #  image: wavsep:latest
  #  restart: always
  #  ports:
  #   - "8080:8080"
  #  networks:
  #   - penetration_net

  # Damn Vulnerable Web Application.
  benchmark:
    container_name: benchmark
    image: vulnerables/web-dvwa
    restart: always
    ports:
      - "80:80"
    networks:
      - penetration_net

networks:
  penetration_net:
    name: 'penetration_net'
    driver: bridge

    
